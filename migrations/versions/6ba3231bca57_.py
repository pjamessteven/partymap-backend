"""empty message

Revision ID: 6ba3231bca57
Revises: 9635c2b756bb
Create Date: 2024-07-31 09:14:00.603379

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '6ba3231bca57'
down_revision = '9635c2b756bb'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    op.create_table('event_reviews',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('creator_id', postgresql.UUID(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('event_date_id', sa.Integer(), nullable=True),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.Column('text', sa.Text(), nullable=True),
    sa.Column('status', sa.SmallInteger(), nullable=True),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.Column('hotness', sa.Float(precision=15, asdecimal=6), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['event_date_id'], ['event_dates.id'], ),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('event_reviews_version',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('created_at', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('creator_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('event_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('event_date_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('rating', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('text', sa.Text(), autoincrement=False, nullable=True),
    sa.Column('status', sa.SmallInteger(), autoincrement=False, nullable=True),
    sa.Column('score', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('hotness', sa.Float(precision=15, asdecimal=6), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id')
    )
    op.create_index(op.f('ix_event_reviews_version_end_transaction_id'), 'event_reviews_version', ['end_transaction_id'], unique=False)
    op.create_index(op.f('ix_event_reviews_version_operation_type'), 'event_reviews_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_event_reviews_version_transaction_id'), 'event_reviews_version', ['transaction_id'], unique=False)
    op.create_table('event_review_downvotes',
    sa.Column('user_id', postgresql.UUID(), nullable=True),
    sa.Column('event_review_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['event_review_id'], ['event_reviews.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
    )
    op.create_table('event_review_upvotes',
    sa.Column('user_id', postgresql.UUID(), nullable=True),
    sa.Column('event_review_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['event_review_id'], ['event_reviews.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
    )
    op.add_column('media_items', sa.Column('review_id', sa.Integer(), nullable=True))
    op.drop_constraint('media_items_contribution_id_fkey', 'media_items', type_='foreignkey')
    op.create_foreign_key(None, 'media_items', 'event_reviews', ['review_id'], ['id'])
    op.drop_column('media_items', 'contribution_id')
    op.add_column('media_items_version', sa.Column('review_id', sa.Integer(), autoincrement=False, nullable=True))
    op.drop_column('media_items_version', 'contribution_id')
    op.add_column('reports', sa.Column('event_review_id', sa.Integer(), nullable=True))
    op.drop_constraint('reports_event_contribution_id_fkey', 'reports', type_='foreignkey')
    op.create_foreign_key(None, 'reports', 'event_reviews', ['event_review_id'], ['id'])
    op.drop_column('reports', 'event_contribution_id')
    # ### end Alembic commands ###

    # manually drop these unused tables
    op.drop_constraint('event_contribution_downvotes_event_contribution_id_fkey', 'event_contribution_downvotes', type_='foreignkey')
    op.drop_constraint('event_contribution_upvotes_event_contribution_id_fkey', 'event_contribution_upvotes', type_='foreignkey')

    op.drop_table('event_review_upvotes')
    op.drop_table('event_review_downvotes')
    op.drop_table('event_contributions_version')
    op.drop_table('event_contributions')

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('reports', sa.Column('event_contribution_id', postgresql.UUID(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'reports', type_='foreignkey')
    op.create_foreign_key('reports_event_contribution_id_fkey', 'reports', 'event_contributions', ['event_contribution_id'], ['id'])
    op.drop_column('reports', 'event_review_id')
    op.add_column('media_items_version', sa.Column('contribution_id', postgresql.UUID(), autoincrement=False, nullable=True))
    op.drop_column('media_items_version', 'review_id')
    op.add_column('media_items', sa.Column('contribution_id', postgresql.UUID(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'media_items', type_='foreignkey')
    op.create_foreign_key('media_items_contribution_id_fkey', 'media_items', 'event_contributions', ['contribution_id'], ['id'])
    op.drop_column('media_items', 'review_id')
    op.drop_table('event_review_upvotes')
    op.drop_table('event_review_downvotes')
    op.drop_index(op.f('ix_event_reviews_version_transaction_id'), table_name='event_reviews_version')
    op.drop_index(op.f('ix_event_reviews_version_operation_type'), table_name='event_reviews_version')
    op.drop_index(op.f('ix_event_reviews_version_end_transaction_id'), table_name='event_reviews_version')
    op.drop_table('event_reviews_version')
    op.drop_table('event_reviews')
    # ### end Alembic commands ###
