"""empty message

Revision ID: 851c3cb270a4
Revises: 
Create Date: 2022-07-17 22:58:31.527713

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import geoalchemy2
import sqlalchemy_utils

# revision identifiers, used by Alembic.
revision = '851c3cb270a4'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('activity',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('verb', sa.Unicode(length=255), nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), nullable=False),
    sa.Column('data', sqlalchemy_utils.types.json.JSONType(), nullable=True),
    sa.Column('object_type', sa.String(length=255), nullable=True),
    sa.Column('object_id', sa.BigInteger(), nullable=True),
    sa.Column('object_tx_id', sa.BigInteger(), nullable=True),
    sa.Column('target_type', sa.String(length=255), nullable=True),
    sa.Column('target_id', sa.BigInteger(), nullable=True),
    sa.Column('target_tx_id', sa.BigInteger(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_activity_transaction_id'), 'activity', ['transaction_id'], unique=False)
    op.create_table('artist_tags_version',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('tag_id', sa.String(length=50), autoincrement=False, nullable=True),
    sa.Column('artist_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('creator_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('created_at', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id')
    )
    op.create_index(op.f('ix_artist_tags_version_end_transaction_id'), 'artist_tags_version', ['end_transaction_id'], unique=False)
    op.create_index(op.f('ix_artist_tags_version_operation_type'), 'artist_tags_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_artist_tags_version_transaction_id'), 'artist_tags_version', ['transaction_id'], unique=False)
    op.create_table('artists',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('mbid', sa.String(length=100), nullable=True),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('popularity', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('disambiguation', sa.Text(), nullable=True),
    sa.Column('area', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('artists_version',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('mbid', sa.String(length=100), autoincrement=False, nullable=True),
    sa.Column('name', sa.String(length=50), autoincrement=False, nullable=True),
    sa.Column('created_at', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('popularity', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('description', sa.Text(), autoincrement=False, nullable=True),
    sa.Column('disambiguation', sa.Text(), autoincrement=False, nullable=True),
    sa.Column('area', sa.Text(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id')
    )
    op.create_index(op.f('ix_artists_version_end_transaction_id'), 'artists_version', ['end_transaction_id'], unique=False)
    op.create_index(op.f('ix_artists_version_operation_type'), 'artists_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_artists_version_transaction_id'), 'artists_version', ['transaction_id'], unique=False)
    op.create_table('clusters_10',
    sa.Column('cluster_id', sa.Integer(), nullable=False),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.Column('centroid', geoalchemy2.types.Geometry(geometry_type='POINT', from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.PrimaryKeyConstraint('cluster_id')
    )
    op.create_table('clusters_11',
    sa.Column('cluster_id', sa.Integer(), nullable=False),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.Column('centroid', geoalchemy2.types.Geometry(geometry_type='POINT', from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.PrimaryKeyConstraint('cluster_id')
    )
    op.create_table('clusters_12',
    sa.Column('cluster_id', sa.Integer(), nullable=False),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.Column('centroid', geoalchemy2.types.Geometry(geometry_type='POINT', from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.PrimaryKeyConstraint('cluster_id')
    )
    op.create_table('clusters_13',
    sa.Column('cluster_id', sa.Integer(), nullable=False),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.Column('centroid', geoalchemy2.types.Geometry(geometry_type='POINT', from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.PrimaryKeyConstraint('cluster_id')
    )
    op.create_table('clusters_14',
    sa.Column('cluster_id', sa.Integer(), nullable=False),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.Column('centroid', geoalchemy2.types.Geometry(geometry_type='POINT', from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.PrimaryKeyConstraint('cluster_id')
    )
    op.create_table('clusters_15',
    sa.Column('cluster_id', sa.Integer(), nullable=False),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.Column('centroid', geoalchemy2.types.Geometry(geometry_type='POINT', from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.PrimaryKeyConstraint('cluster_id')
    )
    op.create_table('clusters_16',
    sa.Column('cluster_id', sa.Integer(), nullable=False),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.Column('centroid', geoalchemy2.types.Geometry(geometry_type='POINT', from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.PrimaryKeyConstraint('cluster_id')
    )
    op.create_table('clusters_2',
    sa.Column('cluster_id', sa.Integer(), nullable=False),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.Column('centroid', geoalchemy2.types.Geometry(geometry_type='POINT', from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.PrimaryKeyConstraint('cluster_id')
    )
    op.create_table('clusters_3',
    sa.Column('cluster_id', sa.Integer(), nullable=False),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.Column('centroid', geoalchemy2.types.Geometry(geometry_type='POINT', from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.PrimaryKeyConstraint('cluster_id')
    )
    op.create_table('clusters_4',
    sa.Column('cluster_id', sa.Integer(), nullable=False),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.Column('centroid', geoalchemy2.types.Geometry(geometry_type='POINT', from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.PrimaryKeyConstraint('cluster_id')
    )
    op.create_table('clusters_5',
    sa.Column('cluster_id', sa.Integer(), nullable=False),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.Column('centroid', geoalchemy2.types.Geometry(geometry_type='POINT', from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.PrimaryKeyConstraint('cluster_id')
    )
    op.create_table('clusters_6',
    sa.Column('cluster_id', sa.Integer(), nullable=False),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.Column('centroid', geoalchemy2.types.Geometry(geometry_type='POINT', from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.PrimaryKeyConstraint('cluster_id')
    )
    op.create_table('clusters_7',
    sa.Column('cluster_id', sa.Integer(), nullable=False),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.Column('centroid', geoalchemy2.types.Geometry(geometry_type='POINT', from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.PrimaryKeyConstraint('cluster_id')
    )
    op.create_table('clusters_8',
    sa.Column('cluster_id', sa.Integer(), nullable=False),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.Column('centroid', geoalchemy2.types.Geometry(geometry_type='POINT', from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.PrimaryKeyConstraint('cluster_id')
    )
    op.create_table('clusters_9',
    sa.Column('cluster_id', sa.Integer(), nullable=False),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.Column('centroid', geoalchemy2.types.Geometry(geometry_type='POINT', from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.PrimaryKeyConstraint('cluster_id')
    )
    op.create_table('countries',
    sa.Column('short_name', sa.String(), nullable=False),
    sa.Column('long_name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('short_name')
    )
    op.create_table('event_date_artists_version',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('artist_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('event_date_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('creator_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('created_at', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('start', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('start_naive', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('stage', sa.String(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id')
    )
    op.create_index(op.f('ix_event_date_artists_version_end_transaction_id'), 'event_date_artists_version', ['end_transaction_id'], unique=False)
    op.create_index(op.f('ix_event_date_artists_version_operation_type'), 'event_date_artists_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_event_date_artists_version_transaction_id'), 'event_date_artists_version', ['transaction_id'], unique=False)
    op.create_table('event_dates_version',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('created_at', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('event_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('tz', sa.String(), autoincrement=False, nullable=True),
    sa.Column('start', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('end', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('start_naive', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('end_naive', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('location_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('description', sa.Text(), autoincrement=False, nullable=True),
    sa.Column('description_attribute', sa.Text(), autoincrement=False, nullable=True),
    sa.Column('url', sa.String(), autoincrement=False, nullable=True),
    sa.Column('ticket_url', sa.String(), autoincrement=False, nullable=True),
    sa.Column('cancelled', sa.Boolean(), autoincrement=False, nullable=True),
    sa.Column('size', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id')
    )
    op.create_index(op.f('ix_event_dates_version_end_transaction_id'), 'event_dates_version', ['end_transaction_id'], unique=False)
    op.create_index(op.f('ix_event_dates_version_operation_type'), 'event_dates_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_event_dates_version_transaction_id'), 'event_dates_version', ['transaction_id'], unique=False)
    op.create_table('event_location_type_association_version',
    sa.Column('event_location_type_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('event_location_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('event_location_type_id', 'event_location_id', 'transaction_id')
    )
    op.create_index(op.f('ix_event_location_type_association_version_end_transaction_id'), 'event_location_type_association_version', ['end_transaction_id'], unique=False)
    op.create_index(op.f('ix_event_location_type_association_version_event_location_type_id'), 'event_location_type_association_version', ['event_location_type_id'], unique=False)
    op.create_index(op.f('ix_event_location_type_association_version_event_location_id'), 'event_location_type_association_version', ['event_location_id'], unique=False)
    op.create_index(op.f('ix_event_location_type_association_version_operation_type'), 'event_location_type_association_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_event_location_type_association_version_transaction_id'), 'event_location_type_association_version', ['transaction_id'], unique=False)
    op.create_table('event_location_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('event_location_types_version',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('type', sa.String(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id')
    )
    op.create_index(op.f('ix_event_location_types_version_end_transaction_id'), 'event_location_types_version', ['end_transaction_id'], unique=False)
    op.create_index(op.f('ix_event_location_types_version_operation_type'), 'event_location_types_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_event_location_types_version_transaction_id'), 'event_location_types_version', ['transaction_id'], unique=False)
    op.create_table('event_locations_version',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('place_id', sa.String(), autoincrement=False, nullable=True),
    sa.Column('geohash', sa.String(), autoincrement=False, nullable=True),
    sa.Column('geo', geoalchemy2.types.Geometry(geometry_type='POINT', from_text='ST_GeomFromEWKT', name='geometry'), autoincrement=False, nullable=True),
    sa.Column('name', sa.String(), autoincrement=False, nullable=True),
    sa.Column('description', sa.String(), autoincrement=False, nullable=True),
    sa.Column('lat', sa.Float(), autoincrement=False, nullable=True),
    sa.Column('lng', sa.Float(), autoincrement=False, nullable=True),
    sa.Column('country_id', sa.String(), autoincrement=False, nullable=True),
    sa.Column('region_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('locality_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('address_components', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('creator_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('cluster_zoom_2_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('cluster_zoom_3_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('cluster_zoom_4_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('cluster_zoom_5_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('cluster_zoom_6_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('cluster_zoom_7_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('cluster_zoom_8_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('cluster_zoom_9_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('cluster_zoom_10_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('cluster_zoom_11_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('cluster_zoom_12_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('cluster_zoom_13_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('cluster_zoom_14_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('cluster_zoom_15_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('cluster_zoom_16_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id')
    )
    op.create_index(op.f('ix_event_locations_version_end_transaction_id'), 'event_locations_version', ['end_transaction_id'], unique=False)
    op.create_index(op.f('ix_event_locations_version_operation_type'), 'event_locations_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_event_locations_version_transaction_id'), 'event_locations_version', ['transaction_id'], unique=False)
    op.create_table('event_tags_version',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('tag_id', sa.String(length=50), autoincrement=False, nullable=True),
    sa.Column('event_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('creator_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('created_at', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id')
    )
    op.create_index(op.f('ix_event_tags_version_end_transaction_id'), 'event_tags_version', ['end_transaction_id'], unique=False)
    op.create_index(op.f('ix_event_tags_version_operation_type'), 'event_tags_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_event_tags_version_transaction_id'), 'event_tags_version', ['transaction_id'], unique=False)
    op.create_table('events_version',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('created_at', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('updated_at', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('creator_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('host_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('name', sa.Text(), autoincrement=False, nullable=True),
    sa.Column('description', sa.Text(), autoincrement=False, nullable=True),
    sa.Column('description_attribute', sa.Text(), autoincrement=False, nullable=True),
    sa.Column('rrule_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('settings', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('hidden', sa.Boolean(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id')
    )
    op.create_index(op.f('ix_events_version_end_transaction_id'), 'events_version', ['end_transaction_id'], unique=False)
    op.create_index(op.f('ix_events_version_operation_type'), 'events_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_events_version_transaction_id'), 'events_version', ['transaction_id'], unique=False)
    op.create_table('media_items_version',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('created_at', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('creator_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('caption', sa.Text(), autoincrement=False, nullable=True),
    sa.Column('type', sa.Enum('image', 'video', name='media_type'), autoincrement=False, nullable=True),
    sa.Column('position', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('thumb_xxs_filename', sa.String(), autoincrement=False, nullable=True),
    sa.Column('thumb_xs_filename', sa.String(), autoincrement=False, nullable=True),
    sa.Column('thumb_filename', sa.String(), autoincrement=False, nullable=True),
    sa.Column('image_med_filename', sa.String(), autoincrement=False, nullable=True),
    sa.Column('image_filename', sa.String(), autoincrement=False, nullable=True),
    sa.Column('video_low_filename', sa.String(), autoincrement=False, nullable=True),
    sa.Column('video_med_filename', sa.String(), autoincrement=False, nullable=True),
    sa.Column('video_high_filename', sa.String(), autoincrement=False, nullable=True),
    sa.Column('video_poster_filename', sa.String(), autoincrement=False, nullable=True),
    sa.Column('duration', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('contribution_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('event_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('event_date_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('artist_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id')
    )
    op.create_index(op.f('ix_media_items_version_end_transaction_id'), 'media_items_version', ['end_transaction_id'], unique=False)
    op.create_index(op.f('ix_media_items_version_operation_type'), 'media_items_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_media_items_version_transaction_id'), 'media_items_version', ['transaction_id'], unique=False)
    op.create_table('notifications',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('notification_type', sa.String(), nullable=True),
    sa.Column('notification_url', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rrules_version',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('recurring_type', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('separation_count', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('day_of_week', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('week_of_month', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('day_of_month', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('month_of_year', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('start_date_time', sa.String(), autoincrement=False, nullable=True),
    sa.Column('end_date_time', sa.String(), autoincrement=False, nullable=True),
    sa.Column('default_url', sa.String(), autoincrement=False, nullable=True),
    sa.Column('default_ticket_url', sa.String(), autoincrement=False, nullable=True),
    sa.Column('default_location_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id')
    )
    op.create_index(op.f('ix_rrules_version_end_transaction_id'), 'rrules_version', ['end_transaction_id'], unique=False)
    op.create_index(op.f('ix_rrules_version_operation_type'), 'rrules_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_rrules_version_transaction_id'), 'rrules_version', ['transaction_id'], unique=False)
    op.create_table('tags',
    sa.Column('tag', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('tag')
    )
    op.create_table('user_event_favorites_table_version',
    sa.Column('user_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('event_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('transaction_id')
    )
    op.create_index(op.f('ix_user_event_favorites_table_version_end_transaction_id'), 'user_event_favorites_table_version', ['end_transaction_id'], unique=False)
    op.create_index(op.f('ix_user_event_favorites_table_version_operation_type'), 'user_event_favorites_table_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_user_event_favorites_table_version_transaction_id'), 'user_event_favorites_table_version', ['transaction_id'], unique=False)
    op.create_table('user_event_following_table_version',
    sa.Column('user_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('event_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('transaction_id')
    )
    op.create_index(op.f('ix_user_event_following_table_version_end_transaction_id'), 'user_event_following_table_version', ['end_transaction_id'], unique=False)
    op.create_index(op.f('ix_user_event_following_table_version_operation_type'), 'user_event_following_table_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_user_event_following_table_version_transaction_id'), 'user_event_following_table_version', ['transaction_id'], unique=False)
    op.create_table('users',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('role', sa.Integer(), nullable=False),
    sa.Column('last_active', sa.DateTime(), nullable=True),
    sa.Column('username', sa.String(length=80), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=True),
    sa.Column('oauth', sa.Boolean(), nullable=True),
    sa.Column('status', postgresql.ENUM('active', 'disabled', 'pending', name='user_status'), nullable=True),
    sa.Column('karma', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('artist_tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.String(length=50), nullable=True),
    sa.Column('artist_id', sa.Integer(), nullable=True),
    sa.Column('creator_id', postgresql.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['artist_id'], ['artists.id'], ),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.tag'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('artist_urls',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('artist_id', sa.Integer(), nullable=True),
    sa.Column('url', sa.String(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['artist_id'], ['artists.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('email_actions',
    sa.Column('id', sa.String(length=32), nullable=False),
    sa.Column('created', sa.DateTime(timezone=True), nullable=False),
    sa.Column('user_id', postgresql.UUID(), nullable=True),
    sa.Column('actioned', sa.Boolean(), nullable=True),
    sa.Column('expires', sa.DateTime(timezone=True), nullable=True),
    sa.Column('action', sa.Enum('password_reset', 'email_verify', 'ilok_verify', 'account_delete', 'account_create', name='email_action_type'), nullable=True),
    sa.Column('extra_data', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('feedbacks',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('creator_id', postgresql.UUID(), nullable=True),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('contact_email', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('flask_dance_oauth',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('provider', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('token', sqlalchemy_utils.types.json.JSONType(), nullable=False),
    sa.Column('provider_user_id', sa.String(length=256), nullable=False),
    sa.Column('user_id', postgresql.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('provider_user_id')
    )
    op.create_table('regions',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('short_name', sa.String(), nullable=True),
    sa.Column('long_name', sa.String(), nullable=True),
    sa.Column('country_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['country_id'], ['countries.short_name'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transaction',
    sa.Column('issued_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('remote_addr', sa.String(length=50), nullable=True),
    sa.Column('user_id', postgresql.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_transaction_user_id'), 'transaction', ['user_id'], unique=False)
    op.create_table('user_notifications',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', postgresql.UUID(), nullable=False),
    sa.Column('read', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['notifications.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', 'user_id')
    )
    op.create_table('localities',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('short_name', sa.String(), nullable=True),
    sa.Column('long_name', sa.String(), nullable=True),
    sa.Column('country_id', sa.String(), nullable=True),
    sa.Column('region_id', postgresql.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['country_id'], ['countries.short_name'], ),
    sa.ForeignKeyConstraint(['region_id'], ['regions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('event_locations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('place_id', sa.String(), nullable=True),
    sa.Column('geohash', sa.String(), nullable=True),
    sa.Column('geo', geoalchemy2.types.Geometry(geometry_type='POINT', from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('lat', sa.Float(), nullable=True),
    sa.Column('lng', sa.Float(), nullable=True),
    sa.Column('country_id', sa.String(), nullable=True),
    sa.Column('region_id', postgresql.UUID(), nullable=True),
    sa.Column('locality_id', postgresql.UUID(), nullable=True),
    sa.Column('address_components', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('creator_id', postgresql.UUID(), nullable=True),
    sa.Column('cluster_zoom_2_id', sa.Integer(), nullable=True),
    sa.Column('cluster_zoom_3_id', sa.Integer(), nullable=True),
    sa.Column('cluster_zoom_4_id', sa.Integer(), nullable=True),
    sa.Column('cluster_zoom_5_id', sa.Integer(), nullable=True),
    sa.Column('cluster_zoom_6_id', sa.Integer(), nullable=True),
    sa.Column('cluster_zoom_7_id', sa.Integer(), nullable=True),
    sa.Column('cluster_zoom_8_id', sa.Integer(), nullable=True),
    sa.Column('cluster_zoom_9_id', sa.Integer(), nullable=True),
    sa.Column('cluster_zoom_10_id', sa.Integer(), nullable=True),
    sa.Column('cluster_zoom_11_id', sa.Integer(), nullable=True),
    sa.Column('cluster_zoom_12_id', sa.Integer(), nullable=True),
    sa.Column('cluster_zoom_13_id', sa.Integer(), nullable=True),
    sa.Column('cluster_zoom_14_id', sa.Integer(), nullable=True),
    sa.Column('cluster_zoom_15_id', sa.Integer(), nullable=True),
    sa.Column('cluster_zoom_16_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['cluster_zoom_10_id'], ['clusters_10.cluster_id'], ),
    sa.ForeignKeyConstraint(['cluster_zoom_11_id'], ['clusters_11.cluster_id'], ),
    sa.ForeignKeyConstraint(['cluster_zoom_12_id'], ['clusters_12.cluster_id'], ),
    sa.ForeignKeyConstraint(['cluster_zoom_13_id'], ['clusters_13.cluster_id'], ),
    sa.ForeignKeyConstraint(['cluster_zoom_14_id'], ['clusters_14.cluster_id'], ),
    sa.ForeignKeyConstraint(['cluster_zoom_15_id'], ['clusters_15.cluster_id'], ),
    sa.ForeignKeyConstraint(['cluster_zoom_16_id'], ['clusters_16.cluster_id'], ),
    sa.ForeignKeyConstraint(['cluster_zoom_2_id'], ['clusters_2.cluster_id'], ),
    sa.ForeignKeyConstraint(['cluster_zoom_3_id'], ['clusters_3.cluster_id'], ),
    sa.ForeignKeyConstraint(['cluster_zoom_4_id'], ['clusters_4.cluster_id'], ),
    sa.ForeignKeyConstraint(['cluster_zoom_5_id'], ['clusters_5.cluster_id'], ),
    sa.ForeignKeyConstraint(['cluster_zoom_6_id'], ['clusters_6.cluster_id'], ),
    sa.ForeignKeyConstraint(['cluster_zoom_7_id'], ['clusters_7.cluster_id'], ),
    sa.ForeignKeyConstraint(['cluster_zoom_8_id'], ['clusters_8.cluster_id'], ),
    sa.ForeignKeyConstraint(['cluster_zoom_9_id'], ['clusters_9.cluster_id'], ),
    sa.ForeignKeyConstraint(['country_id'], ['countries.short_name'], ),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['locality_id'], ['localities.id'], ),
    sa.ForeignKeyConstraint(['region_id'], ['regions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('event_location_type_association',
    sa.Column('event_location_type_id', sa.Integer(), nullable=False),
    sa.Column('event_location_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['event_location_id'], ['event_locations.id'], ),
    sa.ForeignKeyConstraint(['event_location_type_id'], ['event_location_types.id'], ),
    sa.PrimaryKeyConstraint('event_location_type_id', 'event_location_id')
    )
    op.create_index(op.f('ix_event_location_type_association_event_location_id'), 'event_location_type_association', ['event_location_id'], unique=False)
    op.create_index(op.f('ix_event_location_type_association_event_location_type_id'), 'event_location_type_association', ['event_location_type_id'], unique=False)
    op.create_table('rrules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('recurring_type', sa.Integer(), nullable=False),
    sa.Column('separation_count', sa.Integer(), nullable=True),
    sa.Column('day_of_week', sa.Integer(), nullable=True),
    sa.Column('week_of_month', sa.Integer(), nullable=True),
    sa.Column('day_of_month', sa.Integer(), nullable=True),
    sa.Column('month_of_year', sa.Integer(), nullable=True),
    sa.Column('start_date_time', sa.String(), nullable=True),
    sa.Column('end_date_time', sa.String(), nullable=True),
    sa.Column('default_url', sa.String(), nullable=True),
    sa.Column('default_ticket_url', sa.String(), nullable=True),
    sa.Column('default_location_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['default_location_id'], ['event_locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('creator_id', postgresql.UUID(), nullable=True),
    sa.Column('host_id', postgresql.UUID(), nullable=True),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('description_attribute', sa.Text(), nullable=True),
    sa.Column('rrule_id', sa.Integer(), nullable=True),
    sa.Column('settings', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('hidden', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['host_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['rrule_id'], ['rrules.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('event_dates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('event_id', sa.Integer(), nullable=True),
    sa.Column('tz', sa.String(), nullable=False),
    sa.Column('start', sa.DateTime(), nullable=False),
    sa.Column('end', sa.DateTime(), nullable=False),
    sa.Column('start_naive', sa.DateTime(), nullable=False),
    sa.Column('end_naive', sa.DateTime(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('description_attribute', sa.Text(), nullable=True),
    sa.Column('url', sa.String(), nullable=True),
    sa.Column('ticket_url', sa.String(), nullable=True),
    sa.Column('cancelled', sa.Boolean(), nullable=True),
    sa.Column('size', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['event_locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('event_page_views_table',
    sa.Column('event_id', sa.Integer(), nullable=True),
    sa.Column('user_id', postgresql.UUID(), nullable=True),
    sa.Column('time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
    )
    op.create_table('event_tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.String(length=50), nullable=True),
    sa.Column('event_id', sa.Integer(), nullable=True),
    sa.Column('creator_id', postgresql.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.tag'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reports',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('creator_id', postgresql.UUID(), nullable=True),
    sa.Column('open', sa.Boolean(), nullable=True),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('email', sa.Text(), nullable=True),
    sa.Column('event_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_event_favorites_table',
    sa.Column('user_id', postgresql.UUID(), nullable=True),
    sa.Column('event_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
    )
    op.create_table('user_event_following_table',
    sa.Column('user_id', postgresql.UUID(), nullable=True),
    sa.Column('event_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
    )
    op.create_table('event_contributions',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('creator_id', postgresql.UUID(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('event_date_id', sa.Integer(), nullable=True),
    sa.Column('text', sa.Text(), nullable=True),
    sa.Column('status', sa.SmallInteger(), nullable=True),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.Column('hotness', sa.Float(precision=15, asdecimal=6), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['event_date_id'], ['event_dates.id'], ),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('event_date_artists',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('artist_id', sa.Integer(), nullable=True),
    sa.Column('event_date_id', sa.Integer(), nullable=True),
    sa.Column('creator_id', postgresql.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('start', sa.DateTime(), nullable=True),
    sa.Column('start_naive', sa.DateTime(), nullable=True),
    sa.Column('stage', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['artist_id'], ['artists.id'], ),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['event_date_id'], ['event_dates.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('suggested_edits',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('creator_id', postgresql.UUID(), nullable=True),
    sa.Column('event_id', sa.Integer(), nullable=True),
    sa.Column('event_date_id', sa.Integer(), nullable=True),
    sa.Column('artist_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('approved', 'hidden', 'pending', name='suggestion_status'), nullable=True),
    sa.Column('approved', sa.Boolean(), nullable=True),
    sa.Column('approved_by_id', postgresql.UUID(), nullable=True),
    sa.Column('approved_at', sa.DateTime(), nullable=True),
    sa.Column('action', sa.Enum('create', 'update', 'delete', name='edit_action'), nullable=True),
    sa.Column('object_type', sa.String(), nullable=True),
    sa.Column('kwargs', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('message', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['approved_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['artist_id'], ['artists.id'], ),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['event_date_id'], ['event_dates.id'], ),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('event_contribution_downvotes',
    sa.Column('user_id', postgresql.UUID(), nullable=True),
    sa.Column('event_contribution_id', postgresql.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['event_contribution_id'], ['event_contributions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
    )
    op.create_table('event_contribution_upvotes',
    sa.Column('user_id', postgresql.UUID(), nullable=True),
    sa.Column('event_contribution_id', postgresql.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['event_contribution_id'], ['event_contributions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
    )
    op.create_table('media_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('creator_id', postgresql.UUID(), nullable=True),
    sa.Column('caption', sa.Text(), nullable=True),
    sa.Column('type', sa.Enum('image', 'video', name='media_type'), nullable=True),
    sa.Column('position', sa.Integer(), nullable=True),
    sa.Column('thumb_xxs_filename', sa.String(), nullable=True),
    sa.Column('thumb_xs_filename', sa.String(), nullable=True),
    sa.Column('thumb_filename', sa.String(), nullable=False),
    sa.Column('image_med_filename', sa.String(), nullable=True),
    sa.Column('image_filename', sa.String(), nullable=True),
    sa.Column('video_low_filename', sa.String(), nullable=True),
    sa.Column('video_med_filename', sa.String(), nullable=True),
    sa.Column('video_high_filename', sa.String(), nullable=True),
    sa.Column('video_poster_filename', sa.String(), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('contribution_id', postgresql.UUID(), nullable=True),
    sa.Column('event_id', sa.Integer(), nullable=True),
    sa.Column('event_date_id', sa.Integer(), nullable=True),
    sa.Column('artist_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['artist_id'], ['artists.id'], ),
    sa.ForeignKeyConstraint(['contribution_id'], ['event_contributions.id'], ),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['event_date_id'], ['event_dates.id'], ),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('media_items')
    op.drop_table('event_contribution_upvotes')
    op.drop_table('event_contribution_downvotes')
    op.drop_table('suggested_edits')
    op.drop_table('event_date_artists')
    op.drop_table('event_contributions')
    op.drop_table('user_event_following_table')
    op.drop_table('user_event_favorites_table')
    op.drop_table('reports')
    op.drop_table('event_tags')
    op.drop_table('event_page_views_table')
    op.drop_table('event_dates')
    op.drop_table('events')
    op.drop_table('rrules')
    op.drop_index(op.f('ix_event_location_type_association_event_location_type_id'), table_name='event_location_type_association')
    op.drop_index(op.f('ix_event_location_type_association_event_location_id'), table_name='event_location_type_association')
    op.drop_table('event_location_type_association')
    op.drop_table('event_locations')
    op.drop_table('localities')
    op.drop_table('user_notifications')
    op.drop_index(op.f('ix_transaction_user_id'), table_name='transaction')
    op.drop_table('transaction')
    op.drop_table('regions')
    op.drop_table('flask_dance_oauth')
    op.drop_table('feedbacks')
    op.drop_table('email_actions')
    op.drop_table('artist_urls')
    op.drop_table('artist_tags')
    op.drop_table('users')
    op.drop_index(op.f('ix_user_event_following_table_version_transaction_id'), table_name='user_event_following_table_version')
    op.drop_index(op.f('ix_user_event_following_table_version_operation_type'), table_name='user_event_following_table_version')
    op.drop_index(op.f('ix_user_event_following_table_version_end_transaction_id'), table_name='user_event_following_table_version')
    op.drop_table('user_event_following_table_version')
    op.drop_index(op.f('ix_user_event_favorites_table_version_transaction_id'), table_name='user_event_favorites_table_version')
    op.drop_index(op.f('ix_user_event_favorites_table_version_operation_type'), table_name='user_event_favorites_table_version')
    op.drop_index(op.f('ix_user_event_favorites_table_version_end_transaction_id'), table_name='user_event_favorites_table_version')
    op.drop_table('user_event_favorites_table_version')
    op.drop_table('tags')
    op.drop_index(op.f('ix_rrules_version_transaction_id'), table_name='rrules_version')
    op.drop_index(op.f('ix_rrules_version_operation_type'), table_name='rrules_version')
    op.drop_index(op.f('ix_rrules_version_end_transaction_id'), table_name='rrules_version')
    op.drop_table('rrules_version')
    op.drop_table('notifications')
    op.drop_index(op.f('ix_media_items_version_transaction_id'), table_name='media_items_version')
    op.drop_index(op.f('ix_media_items_version_operation_type'), table_name='media_items_version')
    op.drop_index(op.f('ix_media_items_version_end_transaction_id'), table_name='media_items_version')
    op.drop_table('media_items_version')
    op.drop_index(op.f('ix_events_version_transaction_id'), table_name='events_version')
    op.drop_index(op.f('ix_events_version_operation_type'), table_name='events_version')
    op.drop_index(op.f('ix_events_version_end_transaction_id'), table_name='events_version')
    op.drop_table('events_version')
    op.drop_index(op.f('ix_event_tags_version_transaction_id'), table_name='event_tags_version')
    op.drop_index(op.f('ix_event_tags_version_operation_type'), table_name='event_tags_version')
    op.drop_index(op.f('ix_event_tags_version_end_transaction_id'), table_name='event_tags_version')
    op.drop_table('event_tags_version')
    op.drop_index(op.f('ix_event_locations_version_transaction_id'), table_name='event_locations_version')
    op.drop_index(op.f('ix_event_locations_version_operation_type'), table_name='event_locations_version')
    op.drop_index(op.f('ix_event_locations_version_end_transaction_id'), table_name='event_locations_version')
    op.drop_table('event_locations_version')
    op.drop_index(op.f('ix_event_location_types_version_transaction_id'), table_name='event_location_types_version')
    op.drop_index(op.f('ix_event_location_types_version_operation_type'), table_name='event_location_types_version')
    op.drop_index(op.f('ix_event_location_types_version_end_transaction_id'), table_name='event_location_types_version')
    op.drop_table('event_location_types_version')
    op.drop_table('event_location_types')
    op.drop_index(op.f('ix_event_location_type_association_version_transaction_id'), table_name='event_location_type_association_version')
    op.drop_index(op.f('ix_event_location_type_association_version_operation_type'), table_name='event_location_type_association_version')
    op.drop_index(op.f('ix_event_location_type_association_version_event_location_id'), table_name='event_location_type_association_version')
    op.drop_index(op.f('ix_event_location_type_association_version_event_location_type_id'), table_name='event_location_type_association_version')
    op.drop_index(op.f('ix_event_location_type_association_version_end_transaction_id'), table_name='event_location_type_association_version')
    op.drop_table('event_location_type_association_version')
    op.drop_index(op.f('ix_event_dates_version_transaction_id'), table_name='event_dates_version')
    op.drop_index(op.f('ix_event_dates_version_operation_type'), table_name='event_dates_version')
    op.drop_index(op.f('ix_event_dates_version_end_transaction_id'), table_name='event_dates_version')
    op.drop_table('event_dates_version')
    op.drop_index(op.f('ix_event_date_artists_version_transaction_id'), table_name='event_date_artists_version')
    op.drop_index(op.f('ix_event_date_artists_version_operation_type'), table_name='event_date_artists_version')
    op.drop_index(op.f('ix_event_date_artists_version_end_transaction_id'), table_name='event_date_artists_version')
    op.drop_table('event_date_artists_version')
    op.drop_table('countries')
    op.drop_table('clusters_9')
    op.drop_table('clusters_8')
    op.drop_table('clusters_7')
    op.drop_table('clusters_6')
    op.drop_table('clusters_5')
    op.drop_table('clusters_4')
    op.drop_table('clusters_3')
    op.drop_table('clusters_2')
    op.drop_table('clusters_16')
    op.drop_table('clusters_15')
    op.drop_table('clusters_14')
    op.drop_table('clusters_13')
    op.drop_table('clusters_12')
    op.drop_table('clusters_11')
    op.drop_table('clusters_10')
    op.drop_index(op.f('ix_artists_version_transaction_id'), table_name='artists_version')
    op.drop_index(op.f('ix_artists_version_operation_type'), table_name='artists_version')
    op.drop_index(op.f('ix_artists_version_end_transaction_id'), table_name='artists_version')
    op.drop_table('artists_version')
    op.drop_table('artists')
    op.drop_index(op.f('ix_artist_tags_version_transaction_id'), table_name='artist_tags_version')
    op.drop_index(op.f('ix_artist_tags_version_operation_type'), table_name='artist_tags_version')
    op.drop_index(op.f('ix_artist_tags_version_end_transaction_id'), table_name='artist_tags_version')
    op.drop_table('artist_tags_version')
    op.drop_index(op.f('ix_activity_transaction_id'), table_name='activity')
    op.drop_table('activity')
    # ### end Alembic commands ###
