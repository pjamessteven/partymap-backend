"""empty message

Revision ID: a75eb0506da0
Revises: 52aa828365a5
Create Date: 2025-05-28 01:22:58.715404

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy import inspect
from sqlalchemy.dialects.postgresql import JSONB
# revision identifiers, used by Alembic.
revision = 'a75eb0506da0'
down_revision = '52aa828365a5'
branch_labels = None
depends_on = None


def upgrade():
    bind = op.get_bind()
    inspector = inspect(bind)

    col_type = next(
        (col['type'] for col in inspector.get_columns('flask_usage') if col['name'] == 'ip_info'),
        None
    )

    if isinstance(col_type, JSONB):
        print("Skipping: 'ip_info' already of type JSONB")
        return
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('flask_usage', 'ip_info',
               existing_type=sa.VARCHAR(length=2048), # Or sa.Text depending on your original model
               type_=JSONB,
               existing_nullable=True, # Keep current nullability
               # IMPORTANT: Add the USING clause to cast existing data
               postgresql_using='ip_info::jsonb' # This tells PostgreSQL how to convert
               )

def downgrade():
    bind = op.get_bind()
    inspector = inspect(bind)

    col_type = next(
        (col['type'] for col in inspector.get_columns('flask_usage') if col['name'] == 'ip_info'),
        None
    )

    if not isinstance(col_type, JSONB):
        print("Skipping: 'ip_info' is not of type JSONB")
        return
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('flask_usage', 'ip_info',
               existing_type=JSONB,
               type_=sa.VARCHAR(length=2048), # Or sa.Text
               existing_nullable=True,
               # You might need a more complex conversion here if JSONB has non-string values
               # For example, to convert JSONB back to text safely for all types:
               postgresql_using='ip_info::text' # This might not be suitable if original data wasn't just strings
               )
    # ### end Alembic commands ###