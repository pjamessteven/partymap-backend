"""empty message

Revision ID: 93086455fc92
Revises: 9209477c5428
Create Date: 2021-06-21 17:29:22.937634

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "93086455fc92"
down_revision = "9209477c5428"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "album_items",
        sa.Column("id", postgresql.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("creator_id", postgresql.UUID(), nullable=True),
        sa.Column("position", sa.Integer(), nullable=True),
        sa.Column("filename", sa.String(), nullable=False),
        sa.Column("thumb_filename", sa.String(), nullable=False),
        sa.Column("caption", sa.Text(), nullable=True),
        sa.Column(
            "album_item_type",
            sa.Enum("image", "video", name="album_item_type"),
            nullable=True,
        ),
        sa.Column("album_id", postgresql.UUID(), nullable=True),
        sa.Column("event_id", postgresql.UUID(), nullable=True),
        sa.Column("status", sa.SmallInteger(), nullable=True),
        sa.Column("score", sa.Integer(), nullable=True),
        sa.Column("hotness", sa.Float(precision=15, asdecimal=6), nullable=True),
        sa.ForeignKeyConstraint(
            ["album_id"],
            ["event_albums.id"],
        ),
        sa.ForeignKeyConstraint(
            ["creator_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["event_id"],
            ["events.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "album_item_downvotes",
        sa.Column("user_id", postgresql.UUID(), nullable=True),
        sa.Column("album_item_id", postgresql.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["album_item_id"],
            ["album_items.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
    )
    op.create_table(
        "album_item_upvotes",
        sa.Column("user_id", postgresql.UUID(), nullable=True),
        sa.Column("album_item_id", postgresql.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["album_item_id"],
            ["album_items.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
    )
    op.drop_table("event_image_upvotes")
    op.drop_table("event_image_downvotes")
    op.drop_table("event_images")
    op.add_column(
        "events", sa.Column("featured_album_id", postgresql.UUID(), nullable=True)
    )
    op.drop_constraint("events_cover_album_id_fkey", "events", type_="foreignkey")
    op.create_foreign_key(None, "events", "event_albums", ["featured_album_id"], ["id"])
    op.drop_column("events", "cover_album_id")
    op.add_column(
        "events_version",
        sa.Column(
            "featured_album_id", postgresql.UUID(), autoincrement=False, nullable=True
        ),
    )
    op.drop_column("events_version", "cover_album_id")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "events_version",
        sa.Column(
            "cover_album_id", postgresql.UUID(), autoincrement=False, nullable=True
        ),
    )
    op.drop_column("events_version", "featured_album_id")
    op.add_column(
        "events",
        sa.Column(
            "cover_album_id", postgresql.UUID(), autoincrement=False, nullable=True
        ),
    )
    op.drop_constraint(None, "events", type_="foreignkey")
    op.create_foreign_key(
        "events_cover_album_id_fkey",
        "events",
        "event_albums",
        ["cover_album_id"],
        ["id"],
    )
    op.drop_column("events", "featured_album_id")
    op.create_table(
        "event_images",
        sa.Column("id", postgresql.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", postgresql.UUID(), autoincrement=False, nullable=True),
        sa.Column("filename", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("thumb_filename", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("caption", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("event_id", postgresql.UUID(), autoincrement=False, nullable=True),
        sa.Column("status", sa.SMALLINT(), autoincrement=False, nullable=True),
        sa.Column("score", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("hotness", sa.REAL(), autoincrement=False, nullable=True),
        sa.Column("album_id", postgresql.UUID(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["album_id"], ["event_albums.id"], name="event_images_album_id_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["creator_id"], ["users.id"], name="event_images_creator_id_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["event_id"], ["events.id"], name="event_images_event_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="event_images_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "event_image_downvotes",
        sa.Column("user_id", postgresql.UUID(), autoincrement=False, nullable=True),
        sa.Column(
            "event_image_id", postgresql.UUID(), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["event_image_id"],
            ["event_images.id"],
            name="event_image_downvotes_event_image_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name="event_image_downvotes_user_id_fkey"
        ),
    )
    op.create_table(
        "event_image_upvotes",
        sa.Column("user_id", postgresql.UUID(), autoincrement=False, nullable=True),
        sa.Column(
            "event_image_id", postgresql.UUID(), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["event_image_id"],
            ["event_images.id"],
            name="event_image_upvotes_event_image_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name="event_image_upvotes_user_id_fkey"
        ),
    )
    op.create_table(
        "spatial_ref_sys",
        sa.Column("srid", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "auth_name", sa.VARCHAR(length=256), autoincrement=False, nullable=True
        ),
        sa.Column("auth_srid", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "srtext", sa.VARCHAR(length=2048), autoincrement=False, nullable=True
        ),
        sa.Column(
            "proj4text", sa.VARCHAR(length=2048), autoincrement=False, nullable=True
        ),
        sa.CheckConstraint(
            "(srid > 0) AND (srid <= 998999)", name="spatial_ref_sys_srid_check"
        ),
        sa.PrimaryKeyConstraint("srid", name="spatial_ref_sys_pkey"),
    )
    op.drop_table("album_item_upvotes")
    op.drop_table("album_item_downvotes")
    op.drop_table("album_items")
    # ### end Alembic commands ###
